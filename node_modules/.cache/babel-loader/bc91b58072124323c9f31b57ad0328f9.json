{"ast":null,"code":"var _jsxFileName = \"/Users/youssef/Desktop/pIRfusiX-Front-End/src/HomescreenComp/PatientTab.js\";\nimport React, { Component } from 'react';\nimport './PatientTab.css';\nimport Navig from './Navbar';\nimport Footer from './footer';\nimport Card from './Card';\nimport RequestHandle from '../RequestHelpers/RequestHandle';\nimport axios from 'axios';\n/*\n<ul>\n{patients.map((item, index) => {\n    return <Dropdown question = {item.name} answer = {item.info}></Dropdown>\n})}\n</ul> \n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PatientTab extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patlist: [],\n      triplist: [],\n      notes: [],\n      conds: [],\n      current_pat: \"\",\n      current_hcn: \"\",\n      current_note: \"\",\n      current_cond: \"\"\n    };\n    this.finddata = this.finddata.bind(this);\n    this.addNote = this.addNote.bind(this);\n    this.deleteCond = this.deleteCond.bind(this);\n    this.deleteNote = this.deleteNote.bind(this);\n  }\n\n  componentDidMount() {\n    RequestHandle.getPatients().then(response => {\n      var temp = [];\n      temp = response.data;\n      this.setState({\n        patlist: temp\n      });\n      console.log(this.state.patlist);\n    }).catch(function (ex) {\n      console.log(\"Response parsing failed, Error: \", ex);\n    });\n    ;\n  }\n\n  finddata() {\n    alert(this.state.patlist[0].fname);\n  }\n\n  getTrips(hcn, f, l) {\n    this.setState({\n      current_hcn: hcn\n    });\n    RequestHandle.getTrips(hcn).then(response => {\n      var temp = [];\n      temp = response.data;\n      this.setState({\n        triplist: temp\n      });\n      this.setState({\n        current_pat: f + \" \" + l\n      });\n      console.log(this.state.triplist);\n    }).catch(function (ex) {\n      console.log(\"Response parsing failed, Error: \", ex);\n    });\n    ; /////////////////////\n\n    RequestHandle.getNotes(hcn).then(response2 => {\n      var temp2 = [];\n      temp2 = response2.data;\n      this.setState({\n        notes: temp2\n      });\n      console.log(this.state.notes);\n    }).catch(function (ex) {\n      console.log(\"Response parsing failed, Error: \", ex);\n    });\n    ; ////////////////////\n\n    RequestHandle.getConds(hcn).then(response3 => {\n      var temp3 = [];\n      temp3 = response3.data;\n      this.setState({\n        conds: temp3\n      });\n      console.log(this.state.conds);\n    }).catch(function (ex) {\n      console.log(\"Response parsing failed, Error: \", ex);\n    });\n    ;\n  }\n\n  addNote(event) {\n    this.state.notes.push(this.state.current_note);\n    const obj = {\n      NoteID: Math.random().toString(36).slice(2),\n      HCN: this.state.current_hcn,\n      note: this.state.current_note\n    };\n    console.log(JSON.stringify(obj));\n    RequestHandle.addNote(obj, this.state.current_hcn).then(res => {\n      console.log(obj);\n      console.log(obj.data);\n    }).catch(error => {\n      console.log(error);\n    });\n    event.preventDefault();\n  }\n\n  validNote(item) {\n    let itemValue = item.target.value;\n    this.setState({\n      current_note: itemValue\n    });\n    this.forceUpdate();\n  }\n\n  addCond(event) {\n    const obj = {\n      CondID: Math.random().toString(36).slice(2),\n      HCN: this.state.current_hcn,\n      cond: this.state.current_cond\n    };\n    console.log(JSON.stringify(obj));\n    RequestHandle.addCond(obj, this.state.current_hcn).then(res => {\n      console.log(obj);\n      console.log(obj.data);\n    }).catch(error => {\n      console.log(error);\n    });\n    event.preventDefault();\n  }\n\n  validCond(item) {\n    let itemValue = item.target.value;\n    this.setState({\n      current_cond: itemValue\n    });\n    this.forceUpdate();\n  }\n\n  deleteNote(id) {//RequestHandle.deleteNote(id);\n    //this.forceUpdate();\n  }\n\n  deleteCond(id) {//RequestHandle.deleteCond(id);\n    //this.forceUpdate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navig, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"patient-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"pat-list\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: this.state.patlist.map(the_patient => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.getTrips(the_patient.healthcarenum, the_patient.fname, the_patient.lname),\n              className: \"patient-btns\",\n              children: [the_patient.fname, \" \", the_patient.lname]\n            }, the_patient.healthcarenum, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this) //needs to be a button instead\n            )\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"patient-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"prev-trips\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: this.state.triplist.map(the_trip => /*#__PURE__*/_jsxDEV(Card, {\n                id: the_trip.tripID,\n                eta: the_trip.elapsedTime,\n                patient: this.state.current_pat,\n                className: \"patient-btns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"pat-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"info-header\",\n              children: \"Medical Conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"med-cond\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"add-container\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: this.state.conds.map(condition => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"condition\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"note-label\",\n                      children: condition.cond\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 73\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: this.deleteCond(condition.id),\n                      className: \"delete\",\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 121\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"submit-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"add-note\",\n                  onChange: item => this.validCond(item),\n                  placeholder: \"Add patient Condition\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"add\",\n                  onClick: event => this.addCond(event),\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"info-header\",\n              children: \"Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"pat-notes\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"add-container\",\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: this.state.notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"note\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"note-label\",\n                      children: note.note\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 68\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: this.deleteNote(note.id),\n                      className: \"delete\",\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 111\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"submit-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"add-note\",\n                  onChange: item => this.validNote(item),\n                  placeholder: \"Add patient Note\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"add\",\n                  onClick: event => this.addNote(event),\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PatientTab;","map":{"version":3,"sources":["/Users/youssef/Desktop/pIRfusiX-Front-End/src/HomescreenComp/PatientTab.js"],"names":["React","Component","Navig","Footer","Card","RequestHandle","axios","PatientTab","constructor","props","state","patlist","triplist","notes","conds","current_pat","current_hcn","current_note","current_cond","finddata","bind","addNote","deleteCond","deleteNote","componentDidMount","getPatients","then","response","temp","data","setState","console","log","catch","ex","alert","fname","getTrips","hcn","f","l","getNotes","response2","temp2","getConds","response3","temp3","event","push","obj","NoteID","Math","random","toString","slice","HCN","note","JSON","stringify","res","error","preventDefault","validNote","item","itemValue","target","value","forceUpdate","addCond","CondID","cond","validCond","id","render","map","the_patient","healthcarenum","lname","the_trip","tripID","elapsedTime","condition"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './PatientTab.css'\nimport Navig from './Navbar'\nimport Footer from './footer';\nimport Card from './Card';\nimport RequestHandle from '../RequestHelpers/RequestHandle';\nimport axios from 'axios';\n\n/*\n<ul>\n{patients.map((item, index) => {\n    return <Dropdown question = {item.name} answer = {item.info}></Dropdown>\n})}\n</ul> \n*/\n\nclass PatientTab extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            patlist:[],\n            triplist:[],\n            notes:[],\n            conds:[],\n            current_pat: \"\",\n            current_hcn: \"\",\n            current_note: \"\",\n            current_cond: \"\"\n        }\n\n        this.finddata = this.finddata.bind(this);\n        this.addNote = this.addNote.bind(this);\n        this.deleteCond = this.deleteCond.bind(this);\n        this.deleteNote = this.deleteNote.bind(this);\n    }\n\n    componentDidMount(){\n        RequestHandle.getPatients().then((response) => {\n            var temp = []\n            temp = response.data;\n            this.setState({patlist: temp})\n            console.log(this.state.patlist)\n        })\n        .catch(function (ex) {\n            console.log(\"Response parsing failed, Error: \", ex)\n        });;\n    }\n\n    finddata(){\n        alert(this.state.patlist[0].fname);\n    }\n\n    getTrips(hcn, f, l){\n        this.setState({current_hcn: hcn});\n        RequestHandle.getTrips(hcn).then((response) => {\n            var temp = []\n            temp = response.data;\n            this.setState({triplist: temp})\n            this.setState({current_pat: f + \" \" + l})\n            console.log(this.state.triplist)\n        })\n        .catch(function (ex) {\n            console.log(\"Response parsing failed, Error: \", ex)\n        });;\n/////////////////////\n        RequestHandle.getNotes(hcn).then((response2) => {\n            var temp2 = []\n            temp2 = response2.data;\n            this.setState({notes: temp2})\n            console.log(this.state.notes)\n        })\n        .catch(function (ex) {\n            console.log(\"Response parsing failed, Error: \", ex)\n        });;\n////////////////////\n        RequestHandle.getConds(hcn).then((response3) => {\n            var temp3 = []\n            temp3 = response3.data;\n            this.setState({conds: temp3})\n            console.log(this.state.conds)\n        })\n        .catch(function (ex) {\n            console.log(\"Response parsing failed, Error: \", ex)\n        });;\n    }\n\n    addNote(event){\n        this.state.notes.push(this.state.current_note);\n\n        const obj = {\n            NoteID: Math.random().toString(36).slice(2),\n            HCN: this.state.current_hcn,\n            note: this.state.current_note\n        }\n\n        console.log(JSON.stringify(obj));\n\n        RequestHandle.addNote(obj, this.state.current_hcn)\n            .then(res => {\n                console.log(obj);\n                console.log(obj.data);\n            }).catch(error => {\n                console.log(error);\n            });\n\n            event.preventDefault();\n    }\n\n    validNote(item){\n        let itemValue = item.target.value;\n        this.setState({current_note: itemValue})\n        this.forceUpdate();\n    }\n\n    addCond(event){\n        const obj = {\n            CondID: Math.random().toString(36).slice(2),\n            HCN: this.state.current_hcn,\n            cond: this.state.current_cond\n        }\n\n        console.log(JSON.stringify(obj));\n\n        RequestHandle.addCond(obj, this.state.current_hcn)\n            .then(res => {\n                console.log(obj);\n                console.log(obj.data);\n            }).catch(error => {\n                console.log(error);\n            });\n\n            event.preventDefault();\n    }\n\n    validCond(item){\n        let itemValue = item.target.value;\n        this.setState({current_cond: itemValue})\n        this.forceUpdate();\n    }\n\n    deleteNote(id){\n        //RequestHandle.deleteNote(id);\n        //this.forceUpdate();\n    }\n\n    deleteCond(id){\n        //RequestHandle.deleteCond(id);\n        //this.forceUpdate();\n    }\n\n    render(){\n        return(\n            <div>\n                <Navig/>\n                <div id = \"patient-nav\">\n                    <div id = \"pat-list\">\n                        <ul>\n                            {this.state.patlist.map((the_patient) => \n                                <button key = {the_patient.healthcarenum} onClick = {() => this.getTrips(the_patient.healthcarenum, the_patient.fname, the_patient.lname)} className = \"patient-btns\">{the_patient.fname} {the_patient.lname}</button>\n                                //needs to be a button instead\n                            )}\n                        </ul>                        \n                    </div>\n                    <div id = \"patient-profile\">\n                        <div id = \"prev-trips\">\n                            <ul>\n                                {this.state.triplist.map((the_trip) => \n                                    <Card id = {the_trip.tripID} eta = {the_trip.elapsedTime} patient = {this.state.current_pat} className = \"patient-btns\"></Card>\n                                )}\n                            </ul>  \n                        </div>\n                        <div id = \"pat-info\">\n                            <h3 className = \"info-header\">Medical Conditions</h3>\n                            <div id = \"med-cond\">\n                                <div className = \"add-container\">\n                                    <ul>\n                                        {this.state.conds.map((condition) => \n                                            <li className = \"condition\"><p className = \"note-label\">{condition.cond}</p><button onClick = {this.deleteCond(condition.id)} className = \"delete\">Delete</button></li>\n                                        )}\n                                    </ul>\n                                </div>\n                                <div className = \"submit-container\">\n                                    <input type = \"text\" className = \"add-note\" onChange = {(item) => this.validCond(item)} placeholder = \"Add patient Condition\"></input>\n                                    <button className = \"add\" onClick = {(event) => this.addCond(event)}>+</button>\n                                </div>\n                            </div>\n                            <h3 className = \"info-header\">Notes</h3>\n                            <div id = \"pat-notes\">\n                                <div className = \"add-container\">\n                                    <ul>\n                                        {this.state.notes.map((note) => \n                                            <li className = \"note\"><p className = \"note-label\">{note.note}</p><button onClick = {this.deleteNote(note.id)} className = \"delete\">Delete</button></li>\n                                            \n                                        )}\n                                    </ul>\n                                </div>\n                                <div className = \"submit-container\">\n                                    <input type = \"text\" className = \"add-note\" onChange = {(item) => this.validNote(item)} placeholder = \"Add patient Note\"></input>\n                                    <button className = \"add\" onClick = {(event) => this.addNote(event)}>+</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default PatientTab;"]},"metadata":{},"sourceType":"module"}