{"ast":null,"code":"var _jsxFileName = \"/Users/youssef/Desktop/pIRfusiX-Front-End/src/Charts/LC.js\";\nimport React, { Component } from \"react\";\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  time: 'Page A',\n  value: 400,\n  pv: 2400,\n  amt: 2400\n}, {\n  time: 'Page B',\n  value: 300,\n  pv: 2400,\n  amt: 2400\n}, {\n  time: 'Page C',\n  value: 300,\n  pv: 2400,\n  amt: 2400\n}, {\n  time: 'Page D',\n  value: 200,\n  pv: 2400,\n  amt: 2400\n}, {\n  time: 'Page E',\n  value: 100,\n  pv: 2400,\n  amt: 2400\n}];\n\nclass LC extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(LineChart, {\n      className: \"line-chart\",\n      width: 600,\n      height: 400,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"value\",\n        stroke: \"#FFFFFF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#ccc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default LC;","map":{"version":3,"sources":["/Users/youssef/Desktop/pIRfusiX-Front-End/src/Charts/LC.js"],"names":["React","Component","LineChart","Line","CartesianGrid","XAxis","YAxis","data","time","value","pv","amt","LC","constructor","props","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,aAA1B,EAAyCC,KAAzC,EAAgDC,KAAhD,QAA6D,UAA7D;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,KAAK,EAAE,GAAxB;AAA6BC,EAAAA,EAAE,EAAE,IAAjC;AAAuCC,EAAAA,GAAG,EAAE;AAA5C,CAAD,EAAoD;AAACH,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,KAAK,EAAE,GAAxB;AAA6BC,EAAAA,EAAE,EAAE,IAAjC;AAAuCC,EAAAA,GAAG,EAAE;AAA5C,CAApD,EAAuG;AAACH,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,KAAK,EAAE,GAAxB;AAA6BC,EAAAA,EAAE,EAAE,IAAjC;AAAuCC,EAAAA,GAAG,EAAE;AAA5C,CAAvG,EACT;AAACH,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,KAAK,EAAE,GAAxB;AAA6BC,EAAAA,EAAE,EAAE,IAAjC;AAAuCC,EAAAA,GAAG,EAAE;AAA5C,CADS,EAC0C;AAACH,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,KAAK,EAAE,GAAxB;AAA6BC,EAAAA,EAAE,EAAE,IAAjC;AAAuCC,EAAAA,GAAG,EAAE;AAA5C,CAD1C,CAAb;;AAGA,MAAMC,EAAN,SAAiBX,SAAjB,CAA0B;AAEtBY,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAG,YAAvB;AAAoC,MAAA,KAAK,EAAE,GAA3C;AAAgD,MAAA,MAAM,EAAE,GAAxD;AAA6D,MAAA,IAAI,EAAIR,IAArE;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,OAA9B;AAAsC,QAAA,MAAM,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAe,QAAA,MAAM,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAfqB;;AAgBzB;AAED,eAAeK,EAAf","sourcesContent":["import React, {Component} from \"react\";\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\n\nconst data = [{time: 'Page A', value: 400, pv: 2400, amt: 2400}, {time: 'Page B', value: 300, pv: 2400, amt: 2400}, {time: 'Page C', value: 300, pv: 2400, amt: 2400},\n    {time: 'Page D', value: 200, pv: 2400, amt: 2400}, {time: 'Page E', value: 100, pv: 2400, amt: 2400}];\n\nclass LC extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <LineChart className = \"line-chart\" width={600} height={400} data = {data}>\n                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#FFFFFF\" />\n                <CartesianGrid stroke=\"#ccc\" />\n                <XAxis dataKey=\"time\" />\n                <YAxis />\n            </LineChart>\n        )\n    }\n};\n\nexport default LC;"]},"metadata":{},"sourceType":"module"}